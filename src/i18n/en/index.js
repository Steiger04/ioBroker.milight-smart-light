module.exports = {
  'Listen on all IPs': 'Listen on all IPs',
  'load configuration from file': 'load configuration from file',
  'save and close': 'save and close',
  'save configuration to file': 'save configuration to file',
  appForm: {
    activeApp: 'Activate the milight-smart-light app',
    debounceTime: 'Debounce time (ms)',
    serverPort: 'Server port',
    socketPort: 'Socket port'
  },
  bridgeForm: {
    '4zones': '4 zones',
    '8zones': '8 zones',
    changeMessage: 'When changing, all zones are deleted.',
    commandRepeat: 'Command repeats',
    controllerIp: 'IP',
    controllerPort: 'port',
    delayBetweenCommands: 'Delay between two commands',
    ibox1: 'iBox1',
    ibox2: 'iBox2',
    legacy: 'Legacy',
    type: 'Typ',
    v6: 'Version 6'
  },
  cancel: 'cancel',
  close: 'close',
  otherConfig: 'The selected configuration belongs to the adapter: {msg}',
  ra_filter_customs: 'Settings',
  ra_filter_func: 'Function',
  ra_filter_id: 'ID',
  ra_filter_name: 'Name',
  ra_filter_role: 'Role',
  ra_filter_room: 'Room',
  ra_filter_type: 'Type',
  ra_tooltip_ack: 'Acknowledged flag',
  ra_tooltip_copyState: 'Copy the state value',
  ra_tooltip_customConfig: 'Custom settings',
  ra_tooltip_deleteObject: 'Delete object',
  ra_tooltip_editObject: 'Edit object',
  ra_tooltip_editState: 'Edit the state value',
  ra_tooltip_from: 'From',
  ra_tooltip_lc: 'Last changed',
  ra_tooltip_quality: 'Quality',
  ra_tooltip_ts: 'Time stamp',
  ra_tooltip_user: 'User',
  ra_tooltip_value: 'Value',
  readme: 'readme',
  save: 'save',
  tabs: {
    app: 'MSL App',
    bridge: 'bridge',
    zones: 'zones'
  },
  validateMsg: {
    between: '{field} must be between {min} and {max}.',
    ip: '{field} is not a valid ip address.',
    isAllowedZoneNumber: 'A valid zone type must be selected for {field} {value}.',
    isAllowedZoneType: 'A valid zone must be selected for {field} {value}.',
    isunique: 'Each {field} can only appear once.',
    max: 'Only a maximum of {length} digits are allowed for {field}.',
    minValue: 'The value for {field} must be at least {min}.',
    numeric: 'Only whole numbers are allowed for {field}.',
    regexColorOffset: '{field} {value} has the wrong format. Allowed: 0xYY, Y = [0..9a..f]',
    regexGroupAndName: '{field}: "{value}" contains invalid characters.',
    required: '{field} must be specified.'
  },
  zonesForm: {
    bridge: 'Bridge (iBox1)',
    fullColor8Zone: 'RGB(8) + CCT',
    fullColor: 'RGB + CCT',
    nodata: 'Please create zone(s)!',
    rgbw: 'RGB(W)',
    thactive: 'active',
    thcoloroffset: 'color offset',
    thfunction: 'Groups)',
    thgroupname: 'Group (zone)',
    throom: 'room',
    thzonename: 'Name (zone)',
    thzonenumber: 'Zone',
    thzonetype: 'Type (zone)',
    white: 'White',
    zone1: 'one',
    zone2: 'two',
    zone3: 'three',
    zone4: 'four',
    zone5: 'five',
    zone6: 'six',
    zone7: 'seven',
    zone8: 'eight',
    zone9: 'nine'
  }
};
